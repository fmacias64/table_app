deepdive {

  db.default: {
    driver  : "org.postgresql.Driver"
    url     : "jdbc:postgresql://"${PGHOST}":"${PGPORT}"/"${DBNAME}
    user    : ${PGUSER}
    password: ${PGPASSWORD}
    dbname  : ${DBNAME}
    host    : ${PGHOST}
    port    : ${PGPORT}
  }

  schema.variables {
  }

  extraction.extractors: {
    ext_clean_tables: {
      style : "sql_extractor"
      sql   : """truncate table_cells;
        truncate people_mentions;
        truncate position_mentions"""
    }

    ext_tables: {
      input: "SELECT 0;"
      output_relation: "table_cells"
      udf: ${APP_HOME}"/udf/extract_table_cells.py"
      input_batch_size: 10
      dependencies: ["ext_clean_tables"]
    }

    # extract people mentions
    extract_people: {
      input: """SELECT * from table_cells"""
      output_relation: "people_mentions"
      udf: ${APP_HOME}"/udf/ext_people.py"
      dependencies: ["ext_tables"]
    }

    # extract position
    extract_positions: {
      input: """SELECT * from table_cells"""
      output_relation: "position_mentions"
      udf: ${APP_HOME}"/udf/ext_positions.py"
      dependencies: ["ext_tables"]
    }

    # extract candidates
    ext_candidates: {
      input: """SELECT a.mid, b.mid, 
        from people_mentions a, position_mentions b
        where a.filename = b.filename
        and a.row = b.row;"""
      output_relation: "table_cells"
      udf: ${APP_HOME}"/udf/extract_table_cells.py"
      dependencies: ["ext_clean_tables"]
    }

  }

  inference.factors: {
    # No inference in this example application
  }

  pipeline.run: "ext"
  pipeline.pipelines.ext: ["extract_people", "extract_positions"]

  calibration.holdout_fraction: 0.0

  sampler.sampler_args: "-l 0 -s 10 -i 1000 -t 1 --alpha 0.01"
}
